plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.12.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"
version = '0.14.0-SNAPSHOT'
mainClassName = 'achecrawler.Main'
applicationDefaultJvmArgs = ["-Dname=ache -XX:+UseConcMarkSweepGC -XX:+HeapDumpOnOutOfMemoryError"]

repositories {
    mavenCentral()
}

dependencies {
    // Sub-projects
    implementation project(':crawler-commons')
    // Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.+'
    // Commons
    implementation group: 'com.google.guava', name: 'guava', version: '20.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.21'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.10'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.6'
    implementation group: 'com.github.crawler-commons', name: 'crawler-commons', version: '1.2'
    // CLI
    implementation group: 'io.airlift', name: 'airline', version: '0.9'
    // Data serialization
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.13.0'
    implementation group: 'com.esotericsoftware', name: 'kryo', version: '4.0.2'
    implementation group: 'de.javakaffee', name: 'kryo-serializers', version: '0.42'
    // REST server dependencies
    implementation group: 'com.sparkjava', name: 'spark-core', version: '2.9.3'
    // Metrics and monitoring
    implementation group: 'io.dropwizard.metrics', name: 'metrics-core', version: '3.1.3'
    implementation group: 'io.dropwizard.metrics', name: 'metrics-json', version: '3.1.3'
    implementation group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: '3.1.3'
    // Data management and repositories
    implementation group: 'org.rocksdb', name: 'rocksdbjni', version: '6.15.2'
    implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: '5.6.7'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '0.11.0.1'
    implementation('org.netpreserve.commons:webarchive-commons:1.1.9') {
        exclude group: 'org.apache.hadoop', module: 'hadoop-core'
        exclude group: 'junit', module: 'junit'
    }
    // Data parsing and extraction
    implementation group: 'com.syncthemall', name: 'boilerpipe', version: '1.2.2'
    implementation group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.10.3'
    implementation group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '8.10.1'
    // HTTP libraries
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    // Others
    implementation group: 'com.github.haifengl', name: 'smile-core', version: '1.5.0'
    implementation group: 'org.roaringbitmap', name: 'RoaringBitmap', version: '0.7.8'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.213'
    // TODO: fill these in from Maven Central instead of that local libs dir
    implementation files('libs/langdetect-03-03-2014.jar') // TODO: upgrade to newer version from maven
    implementation files('libs/jsonic-1.2.0.jar') // required by by langdetect-03-03-2014.jar

    // Test time dependencies
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '1.10.+'
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.3.6.v20151106'
    // for tests of crawler commons library fork
    testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '3.14.0'

}


//
// Make sure that ache-dashboard is compiled and copied into resources folder
// before the resources are processed and bundled into the JAR file
//
processResources {
    dependsOn ':ache-dashboard:install'
}


//
// Adds version to final JAR artifact
//
jar {
  manifest {
    attributes(
      "Implementation-Title": project.name,
      "Implementation-Version": archiveVersion
    )
  }
}


//
// Copies config folder into final distribution file
//
task copyConfig {
    def f = file("$buildDir/config")
    outputs.dir f
    doLast {
        copy {
            from rootProject.file("config/").absolutePath
            into "$buildDir/config"
            exclude "sample_model", "sample_training_data", "sample.seeds"
        }
    }
}
applicationDistribution.from(copyConfig) {
    into "config"
}


//
// Integration for test coverage service: coveralls
//
jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(
                dir: it,
                exclude: ['achecrawler/tools/**']
            )
        })
    }
}


